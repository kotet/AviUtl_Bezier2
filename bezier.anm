--track0:開始値,-10000,10000,0,0.01
--track1:終了値,-10000,10000,0,0.01
--track2:時間,0,10000,0,0.01
--track3:精度,1,32,32,1

--dialog:変数名,varname="ox";編集モード/chk,editmode=1;編集モード点数,editorquality=100;エディタサイズ,editorsize=200;制御点,editpos={};

obj.setanchor("editpos",2);

function cubicbezier_y (t,y2,y3)
	local tp = 1-t;
	local y = 3*t*tp^2*y2 + 3*t^2*tp*y3 + t^3;
	return y;
end

function cubicbezier_x (t,x2,x3)
	local tp = 1-t;
	local x = 3*t*tp^2*x2 + 3*t^2*tp*x3 + t^3;
	return x;
end

function cubicbezier_bisection (targetx,x2,x3)
    --xに対応するtを二分法で求める
	local t_min = 0;
	local t_max = 1;
    local t;
	for i=0,1000 do --無限ループ回避
		t = (t_min+t_max)/2;
		local x = cubicbezier_x(t,x2,x3);
		if math.abs(x-targetx) < 1/(2^obj.track3) then
			return t;
		elseif x < targetx then
			t_min = t;
		else
			t_max = t;
		end
	end
	return t;
end

function drawline(x0,y0,x1,y1,col)
	local w = 2;
	obj.load("figure","四角形",col,1);
	obj.drawpoly(x0-obj.x,y0-obj.y,0-obj.z, x1-obj.x,y1-obj.y,0-obj.z, x1+w-obj.x,y1+w-obj.y,0-obj.z, x0+w-obj.x,y0+w-obj.y,0-obj.z);
end

function editor()
	obj.load("figure","四角形",0x7f7f7f,1);
	obj.draw(0,0,0,editorsize,0.5);
	local x2 = math.min(math.max(editpos[1]/editorsize+0.5 ,0),1);
	local x3 = math.min(math.max(editpos[3]/editorsize+0.5 ,0),1);
	local y2 = 1-(editpos[2]/editorsize+0.5);
	local y3 = 1-(editpos[4]/editorsize+0.5);
	for i=0,editorquality do
		local r = 255 * (1-(i/editorquality));
		local b = 255 * (i/editorquality);
		local col = RGB(r,255,b);
		obj.load("figure","円",col,5);
		local t = i/editorquality;
		local x = cubicbezier_x(t,x2,x3)*editorsize - (editorsize/2);
		local y = (1-cubicbezier_y(t,y2,y3))*editorsize - (editorsize/2);
		obj.draw(x,y,-obj.z);
	end
	drawline(-(editorsize/2)+obj.x,(editorsize/2)+obj.y,math.min(math.max(editpos[1],-editorsize/2),editorsize/2)+obj.x,editpos[2]+obj.y,0xaaaa00);
	drawline((editorsize/2)+obj.x,-(editorsize/2)+obj.y,math.min(math.max(editpos[3],-editorsize/2),editorsize/2)+obj.x,editpos[4]+obj.y,0x00aaaa);
	local x = obj.track2/10000;
	local t = cubicbezier_bisection(x,x2,x3);
	local y = cubicbezier_y(t,y2,y3);
	drawline(x*editorsize-(editorsize/2)+obj.x,-(editorsize/2)+obj.y,x*editorsize-(editorsize/2)+obj.x,(editorsize/2)+obj.y,0xff0000);
	drawline(-(editorsize/2)+obj.x,-y*editorsize+(editorsize/2)+obj.y,(editorsize/2)+obj.x,-y*editorsize+(editorsize/2)+obj.y,0xff0000);
end

function animation()
	local x2 = math.min(math.max(editpos[1]/editorsize+0.5 ,0),1);
	local x3 = math.min(math.max(editpos[3]/editorsize+0.5 ,0),1);
	local y2 = 1-(editpos[2]/editorsize+0.5);
	local y3 = 1-(editpos[4]/editorsize+0.5);
    local x = obj.track2/10000;
	local t = cubicbezier_bisection(x,x2,x3);
	local y = cubicbezier_y(t,y2,y3);
    obj[varname] = (1-y)*obj.track0 + y*obj.track1;
end
debug_print(editpos[1]);
if (editmode == 1) then
    editor();
else 
    animation();
end